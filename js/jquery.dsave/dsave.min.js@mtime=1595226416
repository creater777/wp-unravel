$.fn.dsave = function (e) {
    function t(t, a) {
        var d = $("<div />").addClass("dsave-item col s12 m4").attr("data-uid", t.uid).attr("id", "item-" + t.uid);
        a ? d.prependTo(s) : d.appendTo(s);
        var n = $("<div />").addClass("card").appendTo(d), i = $("<div />").addClass("card-content").appendTo(n),
            r = $("<div />").addClass("card-action").appendTo(n),
            o = 'input[type="text"], input[type="password"], input[type="email"], input[type="url"], input[type="tel"], input[type="number"], input[type="search"], select, textarea',
            l = 'input[type="checkbox"], input[type="radio"]';
        $(e.fields).each(function () {
            var a = this;
            if (!a.key) return void a.draw(n, t, e);
            var d = $("<form />").attr("action", e.baseurl + "/update").attr("method", "post").addClass("dsave-form-" + a.key).submit(function () {
                    return !1
                }).appendTo(a.isaction ? r : i),
                s = $("<div />").addClass("dsave-field").addClass("dsave-field-" + a.key).appendTo(d);
            1 == a.isextra && ("string" != typeof t.extra || t.extra.match(/^{.*}$/) || (t.extra = {}), "object" == typeof t.extra && t.extra || (t.extra = $.parseJSON(t.extra), null == t.extra && (t.extra = {})), "undefined" == typeof t.extra[a.key] && (t.extra[a.key] = ""));
            var p = a.isextra ? t.extra[a.key] : t[a.key];
            a.draw(p, s, t, e), s.find(o).length > 0 && s.addClass("input-field"), p && s.find("label").addClass("active"), s.find(o + ", " + l).bind("dsave-update-data", function () {
                var n = $(this), s = n.val();
                "checkbox" == n.attr("type") && (s = n.prop("checked") ? "Y" : "N"), $.post(d.attr("action"), {
                    uid: t.uid,
                    key: a.key,
                    isextra: 1 == a.isextra ? "true" : "false",
                    val: s
                }, function (t) {
                    return "__OK__" != t ? void $.dtoast(t) : void(0 == $("#toast-container").children().length && $.dtoast(e.text.saved))
                }, "text")
            }).change(function () {
                $(this).trigger("dsave-update-data")
            })
        });
        var p = $('<button type="button" />').html('<span class="fa fa-fw fa-times"></span>').addClass("dsave-remove btn btn-floating waves-effect waves-light").focus(function () {
            $(this).blur()
        }).appendTo(n);
        p.click(function (a) {
            a.preventDefault(), $.dconfirm(e.text.removeConfirm, function () {
                $.post(e.baseurl + "/remove", {uid: t.uid}, function (t) {
                    d.remove(), $.dtoast(e.text.saved)
                }, "text")
            })
        }), $("<div />").addClass("clearfix").appendTo(i)
    }

    e = $.extend({
        text: {
            root: "최상위",
            parent: "상위",
            children: "하위",
            saved: "저장 되었습니다.",
            removeConfirm: "정말 제거하시겠습니까?",
            initConfirm: "정말 초기화를 하시겠습니까?"
        },
        prepend: !0,
        has_children: !1,
        parents: [],
        sortable: !0,
        movable: !1,
        complete: function (e) {
        },
        depth: 0,
        module: "slides",
        uid_parent: 0,
        order_by: "seq",
        order_dir: "asc",
        skin: "",
        default_target: "_self",
        fields: [],
        baseurl: ""
    }, e), (e.has_children || e.depth > 1) && e.fields.push({
        draw: function (e, t, a) {
            $("<a />").attr("href", a.baseurl + "/" + t.uid).addClass("btn waves-effect btn-block has-children").html('<span class="fa fa-edit"></span> ' + a.text.children + ' <span class="n teal-text">' + t.n_children + "</span>").appendTo(e)
        }
    }), e.fields.push({
        key: "active", isaction: !0, draw: function (e, t) {
            var a = $("<div />").addClass("switch").appendTo(t), d = $("<label />").appendTo(a);
            d.append("OFF");
            $("<input />").attr({type: "checkbox"}).appendTo(d).prop("checked", "Y" == e), $("<span />").addClass("lever").appendTo(d);
            d.append("ON")
        }
    });
    var a = this.addClass("dsave");
    0 == $("#dsave-file-image").length && $("body").append('\t\t\t<div id="dsave-file-image" class="blueimp-gallery simple">\t\t\t\t<div class="slides"></div>\t\t\t\t<h3 class="title"></h3>\t\t\t\t<a class="prev" style="display: block;"><span class="fa fa-fw fa-chevron-left"></span></a>\t\t\t\t<a class="next" style="display: block;"><span class="fa fa-fw fa-chevron-right"></span></a>\t\t\t\t<a class="close" style="display: block;"><span class="fa fa-fw fa-times"></span></a>\t\t\t\t<!--a class="play-pause" style="display: block;"></a-->\t\t\t\t<ol class="indicator" style="display: block;"></ol>\t\t\t</div>\t\t');
    var d = $("<div />").addClass("dsave-buttons-wrap").appendTo(a),
        n = $("<div />").addClass("dsave-add-button-wrap").appendTo(d),
        s = $("<div />").addClass("dsave-items row").appendTo(a), i = $("<div />").addClass("dsave-loading").spin({
            color: "#fff",
            length: 6,
            radius: 8,
            width: 3
        }).hide().appendTo(n),
        r = $("<div />").addClass("dsave-loading").spin({length: 9, radius: 11, width: 4}).appendTo(s);
    if ("seq" != e.order_by && (e.sortable = !1), e.sortable && (s.sortable({
        handle: ".card",
        items: "> .dsave-item",
        update: function () {
            s.trigger("dsave-update-order")
        }
    }).bind("dsave-update-order", function () {
        var t = $(this).sortable("serialize");
        $.post(e.baseurl + "/order", t, function (t) {
            return "__OK__" != t ? void $.dtoast(t) : void $.dtoast(e.text.saved)
        }, "text")
    }), e.movable && e.depth > 1)) {
        var o = null, l = null, p = null, u = null;
        s.on("sortstart", function (e, t) {
            o = d.find(".dsave-parent"), p = s.find(s.sortable("option", "items")).not(t.item).not(t.placeholder)
        }).on("sortbeforestop", function (t, a) {
            var d = a.item.attr("data-uid");
            o.removeClass("dsave-parent-hover"), l && $.post(e.baseurl + "/update", {
                uid: d,
                key: "uid_parent",
                val: l.attr("data-uid-parent")
            }, function (t) {
                return "__OK__" != t ? void $.dtoast(t) : void $.post(e.baseurl + "/update", {
                    uid: d,
                    key: "seq",
                    val: "0"
                }, function (e) {
                    return "__OK__" != e ? void $.dtoast(e) : void a.item.remove()
                }, "text")
            }, "text"), p.find(".card").removeClass("active"), u && $.post(e.baseurl + "/update", {
                uid: d,
                key: "uid_parent",
                val: u.attr("data-uid")
            }, function (t) {
                return "__OK__" != t ? void $.dtoast(t) : void $.post(e.baseurl + "/update", {
                    uid: d,
                    key: "seq",
                    val: "0"
                }, function (e) {
                    if ("__OK__" != e) return void $.dtoast(e);
                    a.item.remove();
                    var t = u.find(".has-children .n");
                    t.text(parseInt(t.text()) + 1)
                }, "text")
            }, "text")
        }).on("sort", function (e, t) {
            l = null, o.each(function () {
                var t = $(this), a = t.offset(), d = t.outerWidth(), n = t.outerHeight();
                e.pageX > a.left && e.pageX < a.left + d && e.pageY > a.top && e.pageY < a.top + n ? (l = t, t.addClass("dsave-parent-hover")) : t.removeClass("dsave-parent-hover")
            }), u = null, p.each(function () {
                var t = $(this), a = t.offset(), d = t.outerWidth(), n = t.outerHeight();
                e.pageX > a.left && e.pageX < a.left + d && e.pageY > a.top && e.pageY < a.top + n && t.find("a.has-children").length > 0 ? (u = t, t.find(".card").addClass("active")) : t.find(".card").removeClass("active")
            }), t.item.css("opacity", l || u ? ".5" : "1")
        })
    }
    if (e.uid_parent > 0) {
        var f = $("<nav />").addClass("dsave-breadcrumb-wrap").prependTo(d);
        f.tooltip({position: "left middle", content: e.text.parent});
        for (var c = $("<div />").addClass("nav-wrapper blue").appendTo(f), v = e.parents, h = e.baseurl.split("/"), m = 0; m < v.length; m++) h.pop();
        h = h.join("/"), $("<a />").addClass("dsave-parent breadcrumb").attr("href", h).text(e.text.root).appendTo(c);
        for (var m = 0; m < v.length; m++) {
            var b = v[m];
            h += "/" + b.uid, m == v.length - 1 ? $("<span />").addClass("dsave-parent breadcrumb").text(b.title ? b.title : e.text.parent).appendTo(c) : $("<a />").addClass("dsave-parent breadcrumb").attr("href", h).attr("data-uid-parent", b.uid_parent).text(b.title ? b.title : e.text.parent).appendTo(c)
        }
    }
    var g = $('<button type="button" />').addClass("dsave-add").addClass("btn-floating btn-large waves-effect waves-light red");
    return g.append('<i class="material-icons">add</i>').appendTo(n).click(function (a) {
        a.preventDefault(), g.prop("disabled", !0), i.show(), g.find("i").hide(), $.post(e.baseurl + "/add", function (a) {
            i.hide(), g.find("i").show(), g.prop("disabled", !1), t(a, e.prepend), s.trigger("dsave-update-order");
            var d = s.find(".dsave-item:" + (e.prepend ? "first" : "last"));
            d.find("select").each(function () {
                $(this).find("option:first").prop("selected", !0).end().trigger("dsave-update-data")
            })
        }, "json")
    }), $.post(e.baseurl + "/get-all", function (a) {
        r.remove(), $(a).each(function () {
            t(this)
        }), e.complete(a)
    }, "json"), this
}, $.dsaveFile = function (e, t, a, d, n, s) {
    function i() {
        f.empty().addClass("dsave-file-thumb-no-image").html('<span class="middle-outer"><span class="middle-inner"><span class="fa fa-photo"></span></span></span>')
    }

    function r() {
        return a.find('input[type="file"]').remove(), $('<input type="file" name="file" />').attr("id", p).addClass("dsave-file-input").appendTo(a)
    }

    function o() {
        u.show(), $.ajaxFileUpload({
            url: d.baseurl + "/upload",
            fileElementId: p,
            dataType: "json",
            data: {
                uid: t.uid,
                module: e,
                watermark_path: s.path,
                watermark_valign: s.valign,
                watermark_halign: s.halign,
                watermark_voffset: s.voffset,
                watermark_hoffset: s.hoffset
            },
            success: function (e, t) {
                u.hide(), "undefined" != typeof e.error && "" != e.error && $.dtoast(e.error), l(e.files, f)
            },
            error: function (e, t, a) {
                u.hide()
            }
        })
    }

    function l(a, n) {
        i();
        var s = a[e];
        if ("object" == typeof a[e]) {
            if (n.empty(), s.is_image) {
                $("<a />").attr("href", s.url).addClass("dsave-file-image").attr("data-gallery", "#dsave-file-image").tooltip({
                    position: "top center",
                    content: s.fname
                }).css({backgroundImage: "url(" + s.thumbnail + ")"}).appendTo(n.removeClass("dsave-file-thumb-no-image"))
            } else {
                $("<a />").attr("href", s.url).prop("download", s.fname).addClass("dsave-file-download no-pjax").html('<span class="middle-outer"><span class="middle-inner"><span class="fa fa-file-o"></span></span></span>').tooltip({
                    position: "top center",
                    content: s.fname
                }).appendTo(n)
            }
            $('<button type="button" />').html('<span class="fa fa-fw fa-times"></span>').addClass("dsave-remove btn btn-floating waves-effect waves-light").appendTo(n).click(function (a) {
                a.preventDefault(), $.dconfirm(d.text.removeConfirm, function () {
                    $.post(d.baseurl + "/deletefile", {uid: t.uid, module: e}, function (e) {
                        "__OK__" == e ? i() : $.dtoast(e)
                    }, "text")
                })
            })
        }
    }

    var s = $.extend(!0, {path: "", valign: "", halign: "", voffset: 0, hoffset: 0}, s);
    t.files;
    a.addClass("dsave-file");
    var p = "dsave-inputfile-" + e + "-" + t.uid,
        u = $("<div />").addClass("dsave-loading").spin({length: 4, radius: 6, width: 2}).hide().appendTo(a),
        f = $("<div />").addClass("dsave-file-thumb").appendTo(a),
        c = $('<button type="button" />').html('<span class="fa fa-upload"></span>').addClass("dsave-file-btn-upload teal waves-effect white-text z-depth-1").appendTo(a);
    n && c.tooltip({position: "top center", content: n}), c.click(function (e) {
        e.preventDefault(), r().click()
    }), $(document).on("change", "input#" + p, function () {
        o()
    }), l(t.files, f)
}, $.fn.dsaveSelectOption = function (e, t, a) {
    return this.each(function () {
        var d = $(this);
        d.prop("multiple") && null != e && (e = e.split(","));
        var n = $("<option />").attr("value", t).text(a).appendTo(d);
        "" == t && n.prop("disabled", !0), "object" == typeof e && null != e ? e.forEach(function (e) {
            e == t && n.prop("selected", !0)
        }) : e == t && n.prop("selected", !0)
    })
}, $.fn.dsaveSelect = function () {
    return this.each(function () {
        var e = $(this);
        e.formSelect(function () {
            e.siblings("input.select-dropdown").trigger("close")
        })
    })
}, $.dsaveSelect = function (e, t, a, d) {
    var n = $("<select />");
    return 1 == d && n.prop("multiple", !0), $(a).each(function () {
        n.dsaveSelectOption(e, this[0], this[1])
    }), n.appendTo(t).dsaveSelect()
}, $.dsaveText = function (e, t, a, d) {
    return $("<label />").text(a).appendTo(t), $('<input type="text" />').appendTo(t).val(e).dform($.extend(!0, {required: {is: !1}}, d))
}, $.dsaveColor = function (e, t, a, d) {
    $.dsaveText(e, t, a, d).blur(function () {
        $(this).trigger("dsave-update-data")
    }).installColorPicker()
}, $.dsaveDate = function (e, t, a, d) {
    var n = $.dsaveText(e, t, a, d);
    return n.datepicker($.extend(!0, $.datepicker_korean, {
        yearRange: "1970:" + moment().format("Y"),
        changeYear: !0
    })), n
}, $.dsaveDateTime = function (e, t, a, d) {
    var n = $.dsaveText(e, t, a, d);
    return n.datetimepicker($.extend(!0, $.datepicker_korean, {
        yearRange: "1970:" + moment().format("Y"),
        changeYear: !0
    })), n
}, $.dsaveTextArea = function (e, t, a, d) {
    return $("<label />").text(a).appendTo(t), $('<textarea cols="80" rows="3" />').addClass("materialize-textarea").appendTo(t).val(e).dform($.extend(!0, {required: {is: !1}}, d))
}, $.dsaveTextEditor = function (e, t, a, d, n) {
    return $('<textarea cols="80" rows="3" />').addClass("materialize-textarea").appendTo(t).val(e).attr({
        "data-editor-height": "100px",
        "data-editor-tool": n ? n : "minimum"
    }).dform($.extend(!0, {required: {is: !1}}, d)).installCkeditor()
}, $(document).bind("dofirst", function (e, t) {
    $(t).find('.dsave-single[contenteditable="true"]:not(.cke_editable)').each(function () {
        var e = $(this), t = e.data("dsave-single-module"), a = e.html(), d = e.hasClass("dsave-single-richtext");
        if (e.prop("spellcheck", !1), d) {
            var n = $.ckeditorOpt($.extend(!0, $.ckeditorOptTemplate("full"), {
                allowedContent: !0,
                filebrowserUploadUrl: "/api/dsavesingleupload/file/" + t,
                filebrowserImageUploadUrl: "/api/dsavesingleupload/img/" + t
            }));
            e.attr("data-editor-templates") && (n.templates = $(this).attr("data-editor-templates")), e.ckeditor(n)
        }
        e.bind("blur", function () {
            var n = e.data("ckeditorInstance"), s = d && n ? n.getData() : e.html();
            if (a != s) {
                if (!d) {
                    var i = s.split(/\<br[\ ]*[\/]{0,1}\>/), r = [];
                    i.forEach(function (e) {
                        $.trim(e) && r.push($("<div />").html($.trim(e)).text())
                    }), s = r.join("<br />"), e.html(s)
                }
                $.post("/api/dsavesingle", {module: t, extra: s}, function (e) {
                    return "__OK__" != e ? void $.dtoast(e) : void $.dtoast("저장 되었습니다.")
                }, "text")
            }
        })
    })
});